
server {
    listen       80;
    listen  [::]:80;
    server_name  scene-dl.satrd.es;    
    add_header Strict-Transport-Security "max-age=31536000;" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
   
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    } 

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    
}

server {
    listen       443 ssl;
    
    server_name  scene-dl.satrd.es;
    add_header Strict-Transport-Security "max-age=31536000;" always;
    add_header X-Frame-Options "SAMEORIGIN" always;

    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;   

    location / {

        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }
    
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    
}






server {
    listen       443 ssl;    
    server_name  s3ui.scene-dl.satrd.es;  
  
    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem;

    # Allow special characters in headers
   ignore_invalid_headers off;  
   proxy_buffering off;
   proxy_request_buffering off;
   client_max_body_size 10000M;
    
    
    location / {
      rewrite ^/minio/ui/(.*) /$1 break;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Host $host:$server_port;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy true;

      # This is necessary to pass the correct IP to be hashed
      real_ip_header X-Real-IP;
      proxy_connect_timeout 300;

      # To support websockets in MinIO versions released after January 2023
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";     

      chunked_transfer_encoding off;
      proxy_pass http://minio:9001; 
   }
   
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    
}

server {
    listen       443 ssl;    
    server_name  s3api.scene-dl.satrd.es;
   
    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem;

    ssl_protocols TLSv1.2 TLSv1.3;  # Asegúrate de que estos protocolos estén habilitados
    ssl_prefer_server_ciphers on;
   
   ignore_invalid_headers off;   
   client_max_body_size 10000M;
   # Disable buffering
   proxy_buffering off;
   proxy_request_buffering off;    
    
    location / {
      
      if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, X-Requested-With, x-amz-date, x-amz-content-sha256, x-amz-user-agent';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
      }
      
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
     
      proxy_connect_timeout 300;      
      proxy_http_version 1.1;      
      proxy_set_header Connection "";
      chunked_transfer_encoding off;

      proxy_pass http://minio:9000; 
   }
    
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }    
}

server {
    listen       443 ssl;  
    server_name  webvowl.scene-dl.satrd.es; 
    
    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem;

    # Allow special characters in headers
   ignore_invalid_headers off;    
    
    location / {     

      proxy_pass http://webvowl:8080/webvowl/; 
   }
   
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }    
}

server {
    listen       443 ssl;  
    server_name  jupyter.scene-dl.satrd.es; 
   
    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem;

    # Allow special characters in headers
   ignore_invalid_headers off;    
    
    location / {     

      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Host $host:$server_port;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy true;

      # This is necessary to pass the correct IP to be hashed
      real_ip_header X-Real-IP;
      proxy_connect_timeout 300;

      # To support websockets in Jupyter versions released after January 2023
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";     

      chunked_transfer_encoding off;

      proxy_pass http://jupyter:8888; 


   }
   
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }  
}  


server {
    listen       443 ssl;  
    server_name  nodered.scene-dl.satrd.es; 
   
    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem;

    # Allow special characters in headers
    ignore_invalid_headers off;
   
    
    location / {     

      proxy_pass http://node-red:1880/;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;

      # These lines help improving the stability of the connection
      proxy_connect_timeout 60s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;
 
   }
   
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }    
}


server {
    listen       443 ssl;  
    server_name  keycloak.scene-dl.satrd.es; 
    
    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem;

    # Allow special characters in headers
   ignore_invalid_headers off;    
    
   

    location / {     
    
      proxy_pass http://keycloak:8080/; 

      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Port 443;
    }
   
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }    
}





server {
    listen       443 ssl;  
    server_name  trinoui.scene-dl.satrd.es; 
    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem; 

    # Allow special characters in headers
   ignore_invalid_headers off;    
    
    location / {     

      proxy_pass http://trino:8080/; 
   }
   
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }    
}

server {
    listen       443 ssl;  
    server_name  mongoui.scene-dl.satrd.es; 
    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem; 

    # Allow special characters in headers
   ignore_invalid_headers off;    
    
    location / {     

      proxy_pass http://mongo-express:8081/; 
   }
   
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }    
}


# Redirect all HTTP requests to HTTPS
server {
    listen 80;
    server_name nifi.scene-dl.satrd.es;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}


server {
    listen       443 ssl;    
    server_name  nifi.scene-dl.satrdl.es;  
    
    ssl_certificate     /etc/ssl/certs/fullchain1.pem;
    ssl_certificate_key /etc/ssl/certs/privkey1.pem;     
    
    
    # Serve cusomtised CSS file 
    location /custom-nifi.css {
        alias /usr/share/nginx/html/css/custom-nifi.css;  # path to CSS file
    }

    location / {
      
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;      
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      

      # This is necessary to pass the correct IP to be hashed
      real_ip_header X-Real-IP;
      proxy_connect_timeout 300;

      # To support websockets 
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";     
      
      # Disable buffering if needed to enahnace NiFi's reponse
      proxy_buffering off;
      proxy_request_buffering off;

      chunked_transfer_encoding off;
      proxy_pass https://nifi:8443; 

      # Inject customised CSS in the responses
      sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="/custom-nifi.css"/></head>';
      sub_filter_once off;

       
   }
    
   
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    
}